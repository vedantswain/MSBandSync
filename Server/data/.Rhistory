}
print(rt_sage_p_unity)
# plot response times of these guys over the study period
for (uid in freq_data_pam_unity$uuid){
user_resp <- lock_screen_d[lock_screen_d$quedget_uuid==uid,]$responseTime
resp_summary <- summary(user_resp)
user_freq <- freq_data_pam_unity[freq_data_pam_unity$uuid==uid,]
max_sing_freq <- max(user_freq$freq)
max_sing_freq <- round(max_sing_freq, digits=2)
titleStr <- paste(uid,"  | Max Freq :" ,max_sing_freq, sep=" ")
z_data_pam_uid <- z_final_data_pam[z_final_data_pam$uuid==uid,]
rt_sage_p_unity <- ggplot(z_data_pam_uid, aes(x = studyDay,
y = responseTime)) +
geom_point(aes(colour=ResponseCode1, shape=ResponseCode1)) +
scale_shape_manual(values=1:nlevels(factor(z_data_pam_uid$ResponseCode1))) +
geom_smooth(method=lm,se=FALSE) +
geom_hline(yintercept = resp_summary[["Median"]],color="black", linetype="dashed",alpha=0.4,show_guide=TRUE) +
#  geom_jitter() +
stat_summary(fun.y = median,shape="point") +
labs(title=titleStr, x = "Day of the Study ", y = "Response Time (ms)") +
xlim (0,32) +
ylim(0,15000) +
theme_minimal() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1) , vjust = 1.5))
# print(rt_sage_p_unity)
filename <- paste("Graphs_PAM/RT_StudyDay_PAM_", uid, ".png", sep="")
# ggsave(rt_sage_p_unity, file=filename, width=14);
break
}
print(rt_sage_p_unity)
# plot response times of these guys over the study period
for (uid in freq_data_pam_unity$uuid){
user_resp <- lock_screen_d[lock_screen_d$quedget_uuid==uid,]$responseTime
resp_summary <- summary(user_resp)
user_freq <- freq_data_pam_unity[freq_data_pam_unity$uuid==uid,]
max_sing_freq <- max(user_freq$freq)
max_sing_freq <- round(max_sing_freq, digits=2)
titleStr <- paste(uid,"  | Max Freq :" ,max_sing_freq, sep=" ")
z_data_pam_uid <- z_final_data_pam[z_final_data_pam$uuid==uid,]
rt_sage_p_unity <- ggplot(z_data_pam_uid, aes(x = studyDay,
y = responseTime)) +
geom_point(aes(colour=ResponseCode1, shape=ResponseCode1)) +
scale_shape_manual(values=1:nlevels(factor(z_data_pam_uid$ResponseCode1))) +
geom_smooth(method=lm,se=FALSE) +
geom_hline(yintercept = resp_summary[["Median"]],color="black", linetype="dashed",alpha=0.4) +
#  geom_jitter() +
stat_summary(fun.y = median,shape="point") +
labs(title=titleStr, x = "Day of the Study ", y = "Response Time (ms)") +
xlim (0,32) +
ylim(0,15000) +
theme_minimal() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1) , vjust = 1.5))
# print(rt_sage_p_unity)
filename <- paste("Graphs_PAM/RT_StudyDay_PAM_", uid, ".png", sep="")
ggsave(rt_sage_p_unity, file=filename, width=14);
# break
}
# plot response times of these guys over the study period
for (uid in freq_annotate_data_pam_unity$uuid){
user_resp <- lock_screen_d[lock_screen_d$quedget_uuid==uid,]$responseTime
resp_summary <- summary(user_resp)
user_freq <- freq_annotate_data_pam_unity[freq_annotate_data_pam_unity$uuid==uid,]
max_sing_freq <- max(user_freq$freq)
max_sing_freq <- round(max_sing_freq, digits=2)
titleStr <- paste(uid,"  | Max Freq :" ,max_sing_freq, sep=" ")
z_annotate_data_pam_uid <- z_annotate_data_pam[z_annotate_data_pam$uuid==uid,]
rt_annotate_sage_p_unity <- ggplot(z_annotate_data_pam_uid, aes(x = studyDay,
y = responseTime)) +
geom_point(aes(colour=ResponseCode2, shape=ResponseCode2)) +
scale_shape_manual(values=1:nlevels(factor(z_annotate_data_pam_uid$ResponseCode2))) +
geom_smooth(method=lm,se=FALSE) +
geom_hline(yintercept = resp_summary[["Median"]],color="black", linetype="dashed",alpha=0.4) +
#  geom_jitter() +
stat_summary(fun.y = median,shape="point") +
labs(title=titleStr, x = "Day of the Study ", y = "Response Time (ms)") +
xlim (0,32) +
ylim(0,15000) +
theme_minimal() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1) , vjust = 1.5))
# print(rt_sage_p_unity)
filename <- paste("Graphs_PAM_Annotate/RT_StudyDay_PAM_", uid, ".png", sep="")
ggsave(rt_annotate_sage_p_unity, file=filename, width=14);
}
View(freq_data_pam)
help(group_by)
View(z_data_pam)
View(z_final_data_pam)
setwd("/Users/vedantdasswain/GitRepositories/CS7470/Server/data")
library("dplyr")
library("car")
library("ggplot2")
## Synchronising with peaks
accel_pos_a <- read.csv("peaks/accel_pos_a.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_b <- read.csv("peaks/accel_pos_b.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_x <- read.csv("peaks/accel_pos_x.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_ab <- merge(x = accel_pos_a, y = accel_pos_b, all = TRUE)
accel_pos_abx <- merge(x = accel_pos_ab, y = accel_pos_x, all = TRUE)
accel_pos_mag <- accel_pos_abx %>% mutate(force=sqrt(x^2+y^2+z^2))
time_med <- median(accel_pos_mag$timestamp)
time_max <- max(accel_pos_mag$timestamp)
time_min <- max(accel_pos_mag$timestamp)
time_quart <- (time_max+time_med)/2
accel_plot <- ggplot(accel_pos_mag, aes(x = timestamp,
y = force, group=position, colour=position)) +
geom_line() +
labs(title="Sync",x = "Time", y = "Magnitude") +
xlim(time_min,time_max) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 0,size=1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold", vjust = 1.5))
print(accel_plot)
View(accel_pos_mag)
accel_plot <- ggplot(accel_pos_mag, aes(x = timestamp,
y = force, group=position, colour=position)) +
geom_line() +
labs(title="Sync",x = "Time", y = "Magnitude") +
xlim(time_quart,time_max) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 0,size=1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold", vjust = 1.5))
print(accel_plot)
accel_plot <- ggplot(accel_pos_mag, aes(x = timestamp,
y = force, group=position, colour=position)) +
geom_line() +
labs(title="Sync",x = "Time", y = "Magnitude") +
xlim(time_min,time_max) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 0,size=1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold", vjust = 1.5))
print(accel_plot)
time_med <- median(accel_pos_mag$timestamp)
time_max <- max(accel_pos_mag$timestamp)
time_min <- min(accel_pos_mag$timestamp)
time_quart <- (time_max+time_med)/2
accel_plot <- ggplot(accel_pos_mag, aes(x = timestamp,
y = force, group=position, colour=position)) +
geom_line() +
labs(title="Sync",x = "Time", y = "Magnitude") +
xlim(time_min,time_max) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 0,size=1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold", vjust = 1.5))
print(accel_plot)
accel_pos_peaks <- accel_pos_mag %>% group_by(position) %>% filter(force == max(force))
View(accel_pos_peaks)
options("scipen"=100, "digits"=4)
View(accel_pos_peaks)
1491433515313 - 1491433515310
1491433564978 - 1491433515313
## Synchronising with peaks
accel_pos_a <- read.csv("peaks_old/accel_pos_a.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_b <- read.csv("peaks_old/accel_pos_b.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_x <- read.csv("peaks_old/accel_pos_x.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_ab <- merge(x = accel_pos_a, y = accel_pos_b, all = TRUE)
accel_pos_abx <- merge(x = accel_pos_ab, y = accel_pos_x, all = TRUE)
accel_pos_mag <- accel_pos_abx %>% mutate(force=sqrt(x^2+y^2+z^2))
time_med <- median(accel_pos_mag$timestamp)
time_max <- max(accel_pos_mag$timestamp)
time_min <- min(accel_pos_mag$timestamp)
time_quart <- (time_max+time_med)/2
accel_plot <- ggplot(accel_pos_mag, aes(x = timestamp,
y = force, group=position, colour=position)) +
geom_line() +
labs(title="Sync",x = "Time", y = "Magnitude") +
xlim(time_min,time_max) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 0,size=1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold", vjust = 1.5))
print(accel_plot)
accel_pos_a <- read.csv("peaks/accel_pos_a.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_b <- read.csv("peaks/accel_pos_b.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_x <- read.csv("peaks/accel_pos_x.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_ab <- merge(x = accel_pos_a, y = accel_pos_b, all = TRUE)
accel_pos_abx <- merge(x = accel_pos_ab, y = accel_pos_x, all = TRUE)
accel_pos_mag <- accel_pos_abx %>% mutate(force=sqrt(x^2+y^2+z^2))
time_med <- median(accel_pos_mag$timestamp)
time_max <- max(accel_pos_mag$timestamp)
time_min <- min(accel_pos_mag$timestamp)
time_quart <- (time_max+time_med)/2
accel_plot <- ggplot(accel_pos_mag, aes(x = timestamp,
y = force, group=position, colour=position)) +
geom_line() +
labs(title="Sync",x = "Time", y = "Magnitude") +
xlim(time_min,time_max) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 0,size=1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold", vjust = 1.5))
print(accel_plot)
accel_pos_peaks <- accel_pos_mag %>% group_by(position) %>% filter(force == max(force))
accel_pos_a <- read.csv("activities_scap/flex_stat/accel_pos_a.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_b <- read.csv("activities_scap/flex_stat/accel_pos_b.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_x <- read.csv("activities_scap/flex_stat/accel_pos_x.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_ab <- merge(x = accel_pos_a, y = accel_pos_b, all = TRUE)
accel_pos_abx <- merge(x = accel_pos_ab, y = accel_pos_x, all = TRUE)
accel_pos_mag <- accel_pos_abx %>% mutate(force=sqrt(x^2+y^2+z^2))
time_med <- median(accel_pos_mag$timestamp)
time_max <- max(accel_pos_mag$timestamp)
time_quart <- (time_max+time_med)/2
accel_plot <- ggplot(accel_pos_mag, aes(x = timestamp,
y = force, group=position, colour=position)) +
geom_line() +
labs(title="",x = "Time", y = "Magnitude") +
# xlim(time_quart,time_max) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 0,size=1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold", vjust = 1.5))
print(accel_plot)
## Data on flex static
accel_pos_a <- read.csv("activities/flex_stat_q/accel_pos_a.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_b <- read.csv("activities/flex_stat_q/accel_pos_b.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_x <- read.csv("activities/flex_stat_q/accel_pos_x.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_ab <- merge(x = accel_pos_a, y = accel_pos_b, all = TRUE)
accel_pos_abx <- merge(x = accel_pos_ab, y = accel_pos_x, all = TRUE)
accel_pos_mag <- accel_pos_abx %>% mutate(force=sqrt(x^2+y^2+z^2))
time_med <- median(accel_pos_mag$timestamp)
time_max <- max(accel_pos_mag$timestamp)
time_quart <- (time_max+time_med)/2
accel_plot <- ggplot(accel_pos_mag, aes(x = timestamp,
y = force, group=position, colour=position)) +
geom_line() +
labs(title="",x = "Time", y = "Magnitude") +
# xlim(time_quart,time_max) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 0,size=1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold", vjust = 1.5))
print(accel_plot)
accel_pos_a <- read.csv("activities_scap/flex_stat/accel_pos_a.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_b <- read.csv("activities_scap/flex_stat/accel_pos_b.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_x <- read.csv("activities_scap/flex_stat/accel_pos_x.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_ab <- merge(x = accel_pos_a, y = accel_pos_b, all = TRUE)
accel_pos_abx <- merge(x = accel_pos_ab, y = accel_pos_x, all = TRUE)
accel_pos_mag <- accel_pos_abx %>% mutate(force=sqrt(x^2+y^2+z^2))
time_med <- median(accel_pos_mag$timestamp)
time_max <- max(accel_pos_mag$timestamp)
time_quart <- (time_max+time_med)/2
accel_plot <- ggplot(accel_pos_mag, aes(x = timestamp,
y = force, group=position, colour=position)) +
geom_line() +
labs(title="",x = "Time", y = "Magnitude") +
# xlim(time_quart,time_max) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 0,size=1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold", vjust = 1.5))
print(accel_plot)
## Data on flex static
accel_pos_a <- read.csv("activities_scap/flex_move/accel_pos_a.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_b <- read.csv("activities_scap/flex_move/accel_pos_b.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_x <- read.csv("activities_scap/flex_move/accel_pos_x.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_ab <- merge(x = accel_pos_a, y = accel_pos_b, all = TRUE)
accel_pos_abx <- merge(x = accel_pos_ab, y = accel_pos_x, all = TRUE)
accel_pos_mag <- accel_pos_abx %>% mutate(force=sqrt(x^2+y^2+z^2))
time_med <- median(accel_pos_mag$timestamp)
time_max <- max(accel_pos_mag$timestamp)
time_quart <- (time_max+time_med)/2
accel_plot <- ggplot(accel_pos_mag, aes(x = timestamp,
y = force, group=position, colour=position)) +
geom_line() +
labs(title="",x = "Time", y = "Magnitude") +
# xlim(time_quart,time_max) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 0,size=1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold", vjust = 1.5))
print(accel_plot)
accel_pos_a <- read.csv("activities_scap/walk/accel_pos_a.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_b <- read.csv("activities_scap/walk/accel_pos_b.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_x <- read.csv("activities_scap/walk/accel_pos_x.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_ab <- merge(x = accel_pos_a, y = accel_pos_b, all = TRUE)
accel_pos_abx <- merge(x = accel_pos_ab, y = accel_pos_x, all = TRUE)
accel_pos_mag <- accel_pos_abx %>% mutate(force=sqrt(x^2+y^2+z^2))
time_med <- median(accel_pos_mag$timestamp)
time_max <- max(accel_pos_mag$timestamp)
time_quart <- (time_max+time_med)/2
accel_plot <- ggplot(accel_pos_mag, aes(x = timestamp,
y = force, group=position, colour=position)) +
geom_line() +
labs(title="",x = "Time", y = "Magnitude") +
# xlim(time_quart,time_max) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 0,size=1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold", vjust = 1.5))
print(accel_plot)
accel_pos_a <- read.csv("activities_scap/raise_stat/accel_pos_a.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_b <- read.csv("activities_scap/raise_stat/accel_pos_b.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_x <- read.csv("activities_scap/raise_stat/accel_pos_x.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_ab <- merge(x = accel_pos_a, y = accel_pos_b, all = TRUE)
accel_pos_abx <- merge(x = accel_pos_ab, y = accel_pos_x, all = TRUE)
accel_pos_mag <- accel_pos_abx %>% mutate(force=sqrt(x^2+y^2+z^2))
time_med <- median(accel_pos_mag$timestamp)
time_max <- max(accel_pos_mag$timestamp)
time_quart <- (time_max+time_med)/2
accel_plot <- ggplot(accel_pos_mag, aes(x = timestamp,
y = force, group=position, colour=position)) +
geom_line() +
labs(title="",x = "Time", y = "Magnitude") +
# xlim(time_quart,time_max) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 0,size=1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold", vjust = 1.5))
print(accel_plot)
## Data on flex static
accel_pos_a <- read.csv("activities_chest/flex_stat/accel_pos_a.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_b <- read.csv("activities_chest/flex_stat/accel_pos_b.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_x <- read.csv("activities_chest/flex_stat/accel_pos_x.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_ab <- merge(x = accel_pos_a, y = accel_pos_b, all = TRUE)
accel_pos_abx <- merge(x = accel_pos_ab, y = accel_pos_x, all = TRUE)
accel_pos_mag <- accel_pos_abx %>% mutate(force=sqrt(x^2+y^2+z^2))
time_med <- median(accel_pos_mag$timestamp)
time_max <- max(accel_pos_mag$timestamp)
time_quart <- (time_max+time_med)/2
accel_plot <- ggplot(accel_pos_mag, aes(x = timestamp,
y = force, group=position, colour=position)) +
geom_line() +
labs(title="",x = "Time", y = "Magnitude") +
# xlim(time_quart,time_max) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 0,size=1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold", vjust = 1.5))
print(accel_plot)
accel_pos_a <- read.csv("activities_chest/walk/accel_pos_a.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_b <- read.csv("activities_chest/walk/accel_pos_b.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_x <- read.csv("activities_chest/walk/accel_pos_x.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_ab <- merge(x = accel_pos_a, y = accel_pos_b, all = TRUE)
accel_pos_abx <- merge(x = accel_pos_ab, y = accel_pos_x, all = TRUE)
accel_pos_mag <- accel_pos_abx %>% mutate(force=sqrt(x^2+y^2+z^2))
time_med <- median(accel_pos_mag$timestamp)
time_max <- max(accel_pos_mag$timestamp)
time_quart <- (time_max+time_med)/2
accel_plot <- ggplot(accel_pos_mag, aes(x = timestamp,
y = force, group=position, colour=position)) +
geom_line() +
labs(title="",x = "Time", y = "Magnitude") +
# xlim(time_quart,time_max) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 0,size=1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold", vjust = 1.5))
print(accel_plot)
## Synchronising with peaks
# accel_pos_a <- read.csv("peaks_re/accel_pos_a.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_b <- read.csv("peaks_re/accel_pos_b.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_x <- read.csv("peaks_re/accel_pos_x.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
# accel_pos_ab <- merge(x = accel_pos_a, y = accel_pos_b, all = TRUE)
accel_pos_abx <- merge(x = accel_pos_b, y = accel_pos_x, all = TRUE)
accel_pos_mag <- accel_pos_abx %>% mutate(force=sqrt(x^2+y^2+z^2))
time_med <- median(accel_pos_mag$timestamp)
time_max <- max(accel_pos_mag$timestamp)
time_min <- min(accel_pos_mag$timestamp)
time_quart <- (time_max+time_med)/2
accel_plot <- ggplot(accel_pos_mag, aes(x = timestamp,
y = force, group=position, colour=position)) +
geom_line() +
labs(title="Sync",x = "Time", y = "Magnitude") +
xlim(time_min,time_max) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 0,size=1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold", vjust = 1.5))
print(accel_plot)
accel_pos_peaks <- accel_pos_mag %>% group_by(position) %>% filter(force == max(force))
View(accel_pos_peaks)
1491747371530 - 1491747371394
## Synchronising with peaks
accel_pos_a <- read.csv("peaks/accel_pos_a.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_b <- read.csv("peaks/accel_pos_b.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_x <- read.csv("peaks/accel_pos_x.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_ab <- merge(x = accel_pos_a, y = accel_pos_b, all = TRUE)
accel_pos_abx <- merge(x = accel_pos_ab, y = accel_pos_x, all = TRUE)
accel_pos_mag <- accel_pos_abx %>% mutate(force=sqrt(x^2+y^2+z^2))
time_med <- median(accel_pos_mag$timestamp)
time_max <- max(accel_pos_mag$timestamp)
time_min <- min(accel_pos_mag$timestamp)
time_quart <- (time_max+time_med)/2
accel_plot <- ggplot(accel_pos_mag, aes(x = timestamp,
y = force, group=position, colour=position)) +
geom_line() +
labs(title="Sync",x = "Time", y = "Magnitude") +
xlim(time_min,time_max) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 0,size=1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold", vjust = 1.5))
print(accel_plot)
accel_pos_peaks <- accel_pos_mag %>% group_by(position) %>% filter(force == max(force))
accel_plot <- ggplot(accel_pos_mag, aes(x = timestamp,
y = force, group=position, colour=position)) +
geom_line() +
labs(title="Sync",x = "Time", y = "Magnitude") +
xlim(time_min,time_max) +
ylim(-1.5,1.5)
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 0,size=1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold", vjust = 1.5))
print(accel_plot)
accel_plot <- ggplot(accel_pos_mag, aes(x = timestamp,
y = force, group=position, colour=position)) +
geom_line() +
labs(title="Sync",x = "Time", y = "Magnitude") +
xlim(time_min,time_max) +
ylim(-1.5,1.5) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 0,size=1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold", vjust = 1.5))
print(accel_plot)
accel_pos_peaks <- accel_pos_mag %>% group_by(position) %>% filter(force == max(force))
## Synchronising with peaks
accel_pos_a <- read.csv("peaks_old/accel_pos_a.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_b <- read.csv("peaks_old/accel_pos_b.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_x <- read.csv("peaks_old/accel_pos_x.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_ab <- merge(x = accel_pos_a, y = accel_pos_b, all = TRUE)
accel_pos_abx <- merge(x = accel_pos_ab, y = accel_pos_x, all = TRUE)
accel_pos_mag <- accel_pos_abx %>% mutate(force=sqrt(x^2+y^2+z^2))
time_med <- median(accel_pos_mag$timestamp)
time_max <- max(accel_pos_mag$timestamp)
time_min <- min(accel_pos_mag$timestamp)
time_quart <- (time_max+time_med)/2
accel_plot <- ggplot(accel_pos_mag, aes(x = timestamp,
y = force, group=position, colour=position)) +
geom_line() +
labs(title="Sync",x = "Time", y = "Magnitude") +
xlim(time_min,time_max) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 0,size=1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold", vjust = 1.5))
print(accel_plot)
accel_pos_peaks <- accel_pos_mag %>% group_by(position) %>% filter(force == max(force))
1489257184019 - 1489257182527
## Data on flex static
accel_pos_a <- read.csv("activities_scap/raise_stat/accel_pos_a.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_b <- read.csv("activities_scap/raise_stat/accel_pos_b.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_x <- read.csv("activities_scap/raise_stat/accel_pos_x.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_ab <- merge(x = accel_pos_a, y = accel_pos_b, all = TRUE)
accel_pos_abx <- merge(x = accel_pos_ab, y = accel_pos_x, all = TRUE)
accel_pos_mag <- accel_pos_abx %>% mutate(force=sqrt(x^2+y^2+z^2))
time_med <- median(accel_pos_mag$timestamp)
time_max <- max(accel_pos_mag$timestamp)
time_quart <- (time_max+time_med)/2
accel_plot <- ggplot(accel_pos_mag, aes(x = timestamp,
y = force, group=position, colour=position)) +
geom_line() +
labs(title="",x = "Time", y = "Magnitude") +
# xlim(time_quart,time_max) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 0,size=1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold", vjust = 1.5))
print(accel_plot)
## Data on flex move
accel_pos_a <- read.csv("activities/flex_move/accel_pos_a.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_b <- read.csv("activities/flex_move/accel_pos_b.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_x <- read.csv("activities/flex_move/accel_pos_x.csv", na.strings=c("", "NA"), stringsAsFactors = FALSE)
accel_pos_ab <- merge(x = accel_pos_a, y = accel_pos_b, all = TRUE)
accel_pos_abx <- merge(x = accel_pos_ab, y = accel_pos_x, all = TRUE)
accel_pos_mag <- accel_pos_abx %>% mutate(force=sqrt(x^2+y^2+z^2))
time_med <- median(accel_pos_mag$timestamp)
time_max <- max(accel_pos_mag$timestamp)
time_quart <- (time_max+time_med)/2
accel_plot <- ggplot(accel_pos_mag, aes(x = timestamp,
y = force, group=position, colour=position)) +
geom_line() +
labs(title="",x = "Time", y = "Magnitude") +
# xlim(time_quart,time_max) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 0,size=1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold", vjust = 1.5))
print(accel_plot)
