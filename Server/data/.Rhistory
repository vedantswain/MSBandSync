source('~/mount/mQuedget.R')
hist_data <- final_data[final_data$responseTime < 30000,]
rt_histogram <- ggplot(data=hist_data, aes(x=responseTime)) +
geom_histogram() +
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold", vjust = 1.5))
print(hist_data)
print(rt_histogram)
rt_histogram <- ggplot(data=hist_data, aes(x=responseTime)) +
geom_histogram(binwidth = 0.25) +
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold", vjust = 1.5))
print(rt_histogram)
rt_histogram <- ggplot(data=hist_data, aes(x=responseTime)) +
geom_histogram(binwidth = 1) +
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold", vjust = 1.5))
print(rt_histogram)
rt_histogram <- ggplot(data=hist_data, aes(x=responseTime)) +
geom_histogram(binwidth = 5) +
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold", vjust = 1.5))
print(rt_histogram)
rt_histogram <- ggplot(data=hist_data, aes(x=responseTime)) +
geom_histogram(binwidth = 10) +
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold", vjust = 1.5))
print(rt_histogram)
rt_histogram <- ggplot(data=hist_data, aes(x=responseTime)) +
geom_histogram(binwidth = 20) +
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold", vjust = 1.5))
print(rt_histogram)
rt_histogram <- ggplot(data=hist_data, aes(x=responseTime)) +
geom_histogram(binwidth = 40) +
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold", vjust = 1.5))
print(rt_histogram)
rt_histogram <- ggplot(data=hist_data, aes(x=responseTime)) +
geom_histogram(binwidth = 100) +
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold", vjust = 1.5))
print(rt_histogram)
rt_histogram <- ggplot(data=hist_data, aes(x=responseTime)) +
geom_histogram(binwidth = 1000) +
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold", vjust = 1.5))
print(rt_histogram)
rt_histogram <- ggplot(data=hist_data, aes(x=responseTime)) +
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold", vjust = 1.5))
print(rt_histogram)
rt_histogram <- ggplot(data=hist_data, aes(x=responseTime)) +
geom_histogram() +
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold", vjust = 1.5))
print(rt_histogram)
rt_histogram <- ggplot(data=hist_data, aes(x=responseTime)) +
geom_histogram(binwidth = 1000) +
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold", vjust = 1.5))
print(rt_histogram)
rt_histogram <- ggplot(data=hist_data, aes(x=responseTime)) +
geom_histogram(binwidth = 2000) +
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold", vjust = 1.5))
print(rt_histogram)
rt_histogram <- ggplot(data=hist_data, aes(x=responseTime)) +
geom_histogram(binwidth = 1000) +
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold", vjust = 1.5))
print(rt_histogram)
rt_histogram <- ggplot(data=hist_data, aes(x=responseTime)) +
geom_histogram(binwidth = 500) +
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold", vjust = 1.5))
print(rt_histogram)
summary(final_data$responseTime)
source('~/mount/mQuedget.R')
source('~/mount/mQuedget.R')
rt_qfamily_p <- ggplot(log_data, aes(x = questionFamily,
y = log_responseTime)) +
geom_boxplot(aes(fill = questionFamily)) +
# geom_jitter() +
# geom_point(alpha=0.5) +
stat_summary(fun.y = median, geom = "point", shape=".") +
labs(x = "Question Family", y = "Response Time (log)") +
ggtitle("Log of Response Time (ms) by Question Family") +
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold", vjust = 1.5))
print(rt_qfamily_p)
rt_qfamily_p <- ggplot(log_data, aes(x = questionFamily,
y = log_responseTime)) +
geom_boxplot(aes(fill = questionFamily)) +
# geom_jitter() +
# geom_point(alpha=0.5) +
stat_summary(fun.y = median, geom = "point", shape=".") +
labs(x = "Question Family", y = "Response Time (log)") +
ggtitle("Log of Response Time (ms) by Question Family") +
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1), vjust = 1.5))
print(rt_qfamily_p)
rt_qfamily_p <- ggplot(log_data, aes(x = questionFamily,
y = log_responseTime)) +
geom_boxplot(aes(fill = questionFamily)) +
# geom_jitter() +
# geom_point(alpha=0.5) +
stat_summary(fun.y = median, geom = "point", shape=".") +
labs(x = "Question Family", y = "Response Time (log)") +
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1), vjust = 1.5))
print(rt_qfamily_p)
print(rt_qfamily_p)
print(rt_qfamily_p)
print(rt_qfamily_p)
rt_sage_p <- ggplot(log_data, aes(x = studyDay,
y = log_responseTime)) +
geom_boxplot(aes(fill = studyDay,group = cut_width(studyDay, 0.25))) +
#  geom_jitter() +
stat_summary(fun.y = median, geom = "point", shape=".") +
labs(x = "Day of the Study", y = "Response Time (log)") +
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold", vjust = 1.5))
print(rt_sage_p)
rt_sage_p <- ggplot(log_data, aes(x = studyDay,
y = responseTime)) +
geom_boxplot(aes(fill = studyDay,group = cut_width(studyDay, 0.25))) +
#  geom_jitter() +
stat_summary(fun.y = median, geom = "point", shape=".") +
labs(x = "Day of the Study", y = "Response Time (log)") +
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold", vjust = 1.5))
print(rt_sage_p)
rt_sage_p <- ggplot(log_data, aes(x = studyDay,
y = responseTime)) +
geom_boxplot(aes(fill = studyDay,group = cut_width(studyDay, 0.25))) +
#  geom_jitter() +
stat_summary(fun.y = median, geom = "point", shape=".") +
labs(x = "Day of the Study", y = "Response Time (ms)") +
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold", vjust = 1.5))
print(rt_sage_p)
rt_qfamily_p <- ggplot(log_data, aes(x = questionFamily,
y = responseTime)) +
geom_boxplot(aes(fill = questionFamily)) +
# geom_jitter() +
# geom_point(alpha=0.5) +
stat_summary(fun.y = median, geom = "point", shape=".") +
labs(x = "Question Family", y = "Response Time (log)") +
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1), vjust = 1.5))
print(rt_qfamily_p)
rt_qfamily_p <- ggplot(log_data, aes(x = questionFamily,
y = log_responseTime)) +
geom_boxplot(aes(fill = questionFamily)) +
# geom_jitter() +
# geom_point(alpha=0.5) +
stat_summary(fun.y = median, geom = "point", shape=".") +
labs(x = "Question Family", y = "Response Time (ms)") +
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1), vjust = 1.5))
print(rt_qfamily_p)
rt_qfamily_p <- ggplot(log_data, aes(x = questionFamily,
y = responseTime)) +
geom_boxplot(aes(fill = questionFamily)) +
# geom_jitter() +
# geom_point(alpha=0.5) +
stat_summary(fun.y = median, geom = "point", shape=".") +
labs(x = "Question Family", y = "Response Time (ms)") +
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1), vjust = 1.5))
print(rt_qfamily_p)
source('~/mount/mQuedget.R')
word = "hello"
word
# df of uuid who answer 50% of their responses with the same answer and have more than 6 answers
freq_data_pam_unity <- freq_data_pam[freq_data_pam$freq>0.5,]
freq_data_pam_unity <- freq_data_pam_unity[freq_data_pam_unity$n>7,]
# plot response times of these guys over the study period
for (uid in freq_data_pam_unity$uuid){
z_data_pam_uid <- z_final_data_pam[z_final_data_pam$uuid==uid,]
rt_sage_p_unity <- ggplot(z_data_pam_uid, aes(x = studyDay,
y = responseTime)) +
geom_point(shape=1, aes(colour=ResponseCode1)) +
geom_smooth(method=lm,se=FALSE) +
#  geom_jitter() +
stat_summary(fun.y = median, geom = "point") +
labs(title=uid, x = "Day of the Study ", y = "Response Time (ms)") +
xlim (0,32) +
ylim(0,15000) +
theme_minimal() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(0.75) , vjust = 1.5))
# print(rt_sage_p_unity)
filename = "Graphs_PAM/RT_StudyDay_PAM_"+uid+".png"
ggsave(rt_sage_p_unity, file=filename);
}
# df of uuid who answer 50% of their responses with the same answer and have more than 6 answers
freq_data_pam_unity <- freq_data_pam[freq_data_pam$freq>0.5,]
freq_data_pam_unity <- freq_data_pam_unity[freq_data_pam_unity$n>7,]
# plot response times of these guys over the study period
for (uid in freq_data_pam_unity$uuid){
z_data_pam_uid <- z_final_data_pam[z_final_data_pam$uuid==uid,]
rt_sage_p_unity <- ggplot(z_data_pam_uid, aes(x = studyDay,
y = responseTime)) +
geom_point(shape=1, aes(colour=ResponseCode1)) +
geom_smooth(method=lm,se=FALSE) +
#  geom_jitter() +
stat_summary(fun.y = median, geom = "point") +
labs(title=uid, x = "Day of the Study ", y = "Response Time (ms)") +
xlim (0,32) +
ylim(0,15000) +
theme_minimal() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(0.75) , vjust = 1.5))
# print(rt_sage_p_unity)
filename <- paste("Graphs_PAM/RT_StudyDay_PAM_", uid, ".png", d, sep="")
ggsave(rt_sage_p_unity, file=filename);
}
# df of uuid who answer 50% of their responses with the same answer and have more than 6 answers
freq_data_pam_unity <- freq_data_pam[freq_data_pam$freq>0.5,]
freq_data_pam_unity <- freq_data_pam_unity[freq_data_pam_unity$n>7,]
# plot response times of these guys over the study period
for (uid in freq_data_pam_unity$uuid){
z_data_pam_uid <- z_final_data_pam[z_final_data_pam$uuid==uid,]
rt_sage_p_unity <- ggplot(z_data_pam_uid, aes(x = studyDay,
y = responseTime)) +
geom_point(shape=1, aes(colour=ResponseCode1)) +
geom_smooth(method=lm,se=FALSE) +
#  geom_jitter() +
stat_summary(fun.y = median, geom = "point") +
labs(title=uid, x = "Day of the Study ", y = "Response Time (ms)") +
xlim (0,32) +
ylim(0,15000) +
theme_minimal() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(0.75) , vjust = 1.5))
# print(rt_sage_p_unity)
filename <- paste("Graphs_PAM/RT_StudyDay_PAM_", uid, ".png", sep="")
ggsave(rt_sage_p_unity, file=filename);
}
# df of uuid who answer 50% of their responses with the same answer and have more than 6 answers
freq_data_pam_unity <- freq_data_pam[freq_data_pam$freq>0.5,]
freq_data_pam_unity <- freq_data_pam_unity[freq_data_pam_unity$n>7,]
# plot response times of these guys over the study period
for (uid in freq_data_pam_unity$uuid){
z_data_pam_uid <- z_final_data_pam[z_final_data_pam$uuid==uid,]
rt_sage_p_unity <- ggplot(z_data_pam_uid, aes(x = studyDay,
y = responseTime)) +
geom_point(shape=1, aes(colour=ResponseCode1)) +
geom_smooth(method=lm,se=FALSE) +
#  geom_jitter() +
stat_summary(fun.y = median, geom = "point") +
labs(title=uid, x = "Day of the Study ", y = "Response Time (ms)") +
xlim (0,32) +
ylim(0,15000) +
theme_minimal() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(0.75) , vjust = 1.5))
# print(rt_sage_p_unity)
filename <- paste("Graphs_PAM/RT_StudyDay_PAM_", uid, ".png", sep="")
ggsave(rt_sage_p_unity, file=filename, width=14);
}
# df of uuid who answer 50% of their responses with the same answer and have more than 6 answers
freq_data_pam_unity <- freq_data_pam[freq_data_pam$freq>0.4,]
freq_data_pam_unity <- freq_data_pam_unity[freq_data_pam_unity$n>7,]
# plot response times of these guys over the study period
for (uid in freq_data_pam_unity$uuid){
z_data_pam_uid <- z_final_data_pam[z_final_data_pam$uuid==uid,]
rt_sage_p_unity <- ggplot(z_data_pam_uid, aes(x = studyDay,
y = responseTime)) +
geom_point(shape=1, aes(colour=ResponseCode1)) +
geom_smooth(method=lm,se=FALSE) +
#  geom_jitter() +
stat_summary(fun.y = median, geom = "point") +
labs(title=uid, x = "Day of the Study ", y = "Response Time (ms)") +
xlim (0,32) +
ylim(0,15000) +
theme_minimal() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(0.75) , vjust = 1.5))
# print(rt_sage_p_unity)
filename <- paste("Graphs_PAM/RT_StudyDay_PAM_", uid, ".png", sep="")
ggsave(rt_sage_p_unity, file=filename, width=14);
}
freq_data_pam_unity <- freq_data_pam[freq_data_pam$freq>0.1,]
for (uid in freq_data_pam_unity$uuid){
user_freq <- freq_data_pam_unity[freq_data_pam_unity$uuid==uid]
print(colMax(user_freq))
}
freq_data_pam_unity <- freq_data_pam[freq_data_pam$freq>0.4,]
freq_data_pam_unity <- freq_data_pam_unity[freq_data_pam_unity$n>7,]
# plot response times of these guys over the study period
for (uid in freq_data_pam_unity$uuid){
user_freq <- freq_data_pam_unity[freq_data_pam_unity$uuid==uid]
print(colMax(user_freq))}
for (uid in freq_data_pam_unity$uuid){
user_freq <- freq_data_pam_unity[freq_data_pam_unity$uuid==uid]}
# df of uuid who answer 50% of their responses with the same answer and have more than 6 answers
freq_data_pam_unity <- freq_data_pam[freq_data_pam$freq>0.4,]
freq_data_pam_unity <- freq_data_pam_unity[freq_data_pam_unity$n>7,]
# plot response times of these guys over the study period
for (uid in freq_data_pam_unity$uuid){
user_freq <- freq_data_pam_unity[freq_data_pam_unity$uuid==uid,]
print(colMax(user_freq))}
# df of uuid who answer 50% of their responses with the same answer and have more than 6 answers
freq_data_pam_unity <- freq_data_pam[freq_data_pam$freq>0.4,]
freq_data_pam_unity <- freq_data_pam_unity[freq_data_pam_unity$n>7,]
# plot response times of these guys over the study period
for (uid in freq_data_pam_unity$uuid){
user_freq <- freq_data_pam_unity[freq_data_pam_unity$uuid==uid,]
print(max(user_freq))}
# df of uuid who answer 50% of their responses with the same answer and have more than 6 answers
freq_data_pam_unity <- freq_data_pam[freq_data_pam$freq>0.4,]
freq_data_pam_unity <- freq_data_pam_unity[freq_data_pam_unity$n>7,]
# plot response times of these guys over the study period
for (uid in freq_data_pam_unity$uuid){
user_freq <- freq_data_pam_unity[freq_data_pam_unity$uuid==uid,]
print(max(user_freq$freq))
}
clear
cl
# df of uuid who answer 50% of their responses with the same answer and have more than 6 answers
freq_data_pam_unity <- freq_data_pam[freq_data_pam$freq>0.4,]
freq_data_pam_unity <- freq_data_pam_unity[freq_data_pam_unity$n>7,]
# plot response times of these guys over the study period
for (uid in freq_data_pam_unity$uuid){
user_freq <- freq_data_pam_unity[freq_data_pam_unity$uuid==uid,]
max_sing_freq <- max(user_freq$freq)
titleStr <- paste(uid,"| Max Freq on a single Response Type: " ,max_sing_freq, sep=" ")
z_data_pam_uid <- z_final_data_pam[z_final_data_pam$uuid==uid,]
rt_sage_p_unity <- ggplot(z_data_pam_uid, aes(x = studyDay,
y = responseTime)) +
geom_point(shape=1, aes(colour=ResponseCode1)) +
geom_smooth(method=lm,se=FALSE) +
#  geom_jitter() +
stat_summary(fun.y = median, geom = "point") +
labs(title=titleStr, x = "Day of the Study ", y = "Response Time (ms)") +
xlim (0,32) +
ylim(0,15000) +
theme_minimal() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1) , vjust = 1.5))
# print(rt_sage_p_unity)
filename <- paste("Graphs_PAM/RT_StudyDay_PAM_", uid, ".png", sep="")
ggsave(rt_sage_p_unity, file=filename, width=14);
}
max_sing_freq <- max(user_freq$freq)
# df of uuid who answer 50% of their responses with the same answer and have more than 6 answers
freq_data_pam_unity <- freq_data_pam[freq_data_pam$freq>0.4,]
freq_data_pam_unity <- freq_data_pam_unity[freq_data_pam_unity$n>7,]
# plot response times of these guys over the study period
for (uid in freq_data_pam_unity$uuid){
user_freq <- freq_data_pam_unity[freq_data_pam_unity$uuid==uid,]
max_sing_freq <- max(user_freq$freq)
max_sing_freq <- round(max_sing_freq, digits=2)
titleStr <- paste(uid,"  | Max Freq :" ,max_sing_freq, sep=" ")
z_data_pam_uid <- z_final_data_pam[z_final_data_pam$uuid==uid,]
rt_sage_p_unity <- ggplot(z_data_pam_uid, aes(x = studyDay,
y = responseTime)) +
geom_point(shape=1, aes(colour=ResponseCode1)) +
geom_smooth(method=lm,se=FALSE) +
#  geom_jitter() +
stat_summary(fun.y = median, geom = "point") +
labs(title=titleStr, x = "Day of the Study ", y = "Response Time (ms)") +
xlim (0,32) +
ylim(0,15000) +
theme_minimal() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1) , vjust = 1.5))
# print(rt_sage_p_unity)
filename <- paste("Graphs_PAM/RT_StudyDay_PAM_", uid, ".png", sep="")
ggsave(rt_sage_p_unity, file=filename, width=14);
}
# df of uuid who answer 50% of their responses with the same answer and have more than 6 answers
freq_data_pam_unity <- freq_data_pam[freq_data_pam$freq>0,]
freq_data_pam_unity <- freq_data_pam_unity[freq_data_pam_unity$n>7,]
# plot response times of these guys over the study period
for (uid in freq_data_pam_unity$uuid){
user_freq <- freq_data_pam_unity[freq_data_pam_unity$uuid==uid,]
max_sing_freq <- max(user_freq$freq)
max_sing_freq <- round(max_sing_freq, digits=2)
titleStr <- paste(uid,"  | Max Freq :" ,max_sing_freq, sep=" ")
z_data_pam_uid <- z_final_data_pam[z_final_data_pam$uuid==uid,]
rt_sage_p_unity <- ggplot(z_data_pam_uid, aes(x = studyDay,
y = responseTime)) +
geom_point(shape=1, aes(colour=ResponseCode1)) +
geom_smooth(method=lm,se=FALSE) +
#  geom_jitter() +
stat_summary(fun.y = median, geom = "point") +
labs(title=titleStr, x = "Day of the Study ", y = "Response Time (ms)") +
xlim (0,32) +
ylim(0,15000) +
theme_minimal() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1) , vjust = 1.5))
# print(rt_sage_p_unity)
filename <- paste("Graphs_PAM/RT_StudyDay_PAM_", uid, ".png", sep="")
ggsave(rt_sage_p_unity, file=filename, width=14);
}
View(freq_data_pam_unity)
options(scipen = 999)
source('~/GitRepositories/CS7470/Server/data/data_plot.R')
View(accel_pos_peaks)
